openapi: "3.0.3"

info:
  version: 1.0.0
  title: HMRC third party payments
  description: |
    This API accepts payments from outside of HMRC. There are two workflows possible,
      1. Fire and forget.
      2. Roundtrip.
    
    The *Fire and Forget* workflow enables an API user to redirect a customer through to an HMRC payment journey. At the
    end of the journey the user will be told to return to the originating software. If an optional back-url was provide
    by the API user we will offer this as a link to the customer to continue their journey.
    
    When the fire and forget workflow is chosen, additional details regarding the outcome of the payment can be 
    discovered by the api user by taking advantage of the /status endpoint.
    
    A *Roundtrip* workflow can be implemented by including an additional return-url. If this is present HMRC will
    post JSON of the payment to this endpoint [NB. Security?] that gives details about the payment including the amount
    the customer actually paid. Note that this amount may be zero.
    
    The /status endpoint can be used with roundtrip workflows as well.


servers:
  - url: https://test-api.service.hmrc.gov.uk/payments/make-payment
    description: Sandbox
  - url: https://api.service.hmrc.gov.uk/payments/make-payment
    description: Production

components:
  securitySchemes:
    userRestricted:
      type: oauth2
      description: |
        HMRC supports OAuth 2.0 for authenticating user restricted API requests using an OAuth 2.0 Bearer Token in the AUTHORIZATION header.
        See https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/user-restricted-endpoints for details.
      flows:
        authorizationCode:
          authorizationUrl: https://api.service.hmrc.gov.uk/oauth/authorize
          tokenUrl: https://api.service.hmrc.gov.uk/oauth/token
          refreshUrl: https://api.service.hmrc.gov.uk/oauth/refresh
          scopes:
            status: Update the status of fraud check
    applicationRestricted:
      type: oauth2
      description: |
        HMRC supports OAuth 2.0 for authenticating application restricted API requests using an OAuth 2.0 Bearer Token in the AUTHORIZATION header.
        See https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/application-restricted-endpoints for details.
      flows:
        clientCredentials:
          tokenUrl: https://api.service.hmrc.gov.uk/oauth/token
          scopes: { }
  parameters:
    acceptHeader:
      name: Accept
      in: header
      schema:
        type: string
        enum: ["application/vnd.hmrc.1.0+json"]
      required: true

paths:
  /pay:
    post:
      description: |
        Begin a payment journey.
        On a successful call to the /pay endpoint to start the payment process the
        API user will receive JSON containing a redirection URL in return. They will then 
        redirect their customer's browser to that URL. This starts the journey for the customer.
      requestBody:
        description: |
          The request body *always* contains the fields that allow HMRC to be able to identify
          the liability that is being paid so that the funds are not mis-allocated. The necessary
          fields are the tax-regime, the reference, the amount, and a journey identifier called
          the vendor-journey-id.
          
          The tax-regime field identifies the tax being paid, currently Self Assessment (SA),
          Corporation Tax (CT), VAT, and EPAYE are supported.
          
          The reference is the reference supplied by HMRC when the liability arose.
          
          The amount is an integer number of pennies that must be greater than 0.
          
          The vendor-journey-id is a UUID (version 4, varient 2) that is supplied by the API user
          in order to identify the journey in calls to the /status endpoint.
          
          The API user can optionally supply two additional URLs.
          
          If the return-url is supplied, HMRC will post details of the customer's journey 
          in JSON format to that URL once the customer journey is complete.
          
          If the back-url is supplied, this url will be diplayed as a link to the customer
          at the end of the customer's journey to conveniently return to the API user's 
          systems.

        required: true
        content:
          application/json:
            schema:
              title: Pay request schema
              description: The Json describing an HMRC third party payment /pay payload.
              type: object
              required: [ tax-regime, reference, amount, vendor-journey-id ]
              properties:
                tax-regime:
                  #We need to sort out the acceptable regimes, e.g. which regime will SA actually go through?
                  type: string
                  description: The tax regime under which the liability has arisen. One of a fixed set.
                  enum: [ SA, CT, VAT, EPAYE ]

                reference:
                  description: The reference identifying the tax liability.
                  type: string
                  example: "1097172564"

                amount:
                  description: The amount to be paid in pennies, so Â£12.34 is 1234, must be greater than 0.
                  type: long
                  minimum: 0
                  exclusiveMinimum: true

                vendor-journey-id:
                  description: Your identifier for this journey. Must be a UUID (version 4, variant 2).
                  type: string
                  format: uuid
                  example: a218f71d-9bf2-438e-851c-71d50866c2e9

                return-url:
                  # It would be helpful to be able to describe the schema for the JSON that we would post to this endpoint
                  description: If this is present HMRC will POST JSON back to the API user giving the outcome of the  journey.
                  type: string
                  format: uri
                  example: "https://some-accounting-software.com/payment-complete/a218f71d9bf2438e851c71d50866c2e9"


                back-url:
                  description: If this is present HMRC will offer this as a link to the  Customer at the end of the journey.
                  type: string
                  format: uri
                  example: "https://some-accounting-software.com/after-pay/a218f71d9bf2438e851c71d50866c2e9"


      responses:
        201:
          description: |
            Created. A 201 response tells the API user that the journey has been created and the customer
            can be safely redirected to the redirect-url that is embedded in the returned JSON.
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect-url:
                    type: string
                    description: The url to direct the customer browser to, to initiate the customer payment journey
              example:
                {"redirect-url": "https://tax.gov.uk/third-party-payment/jhdugiuygdwuygsxajvbh"}

        400:
          description: "Bad Request TBS Rocco"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The url to direct the customer browser to, to initiate the customer payment journey
              example:
                {
                  "error": "Mandatory reference field was omitted."
                }
  /status:
    get:
      description: Find the status of a payment TBS Rocco
      parameters:
        - in: query
          name: ss
          schema:
            type: string
          description: Search scope. One of a fixed set TBS.

        - in: query
          name: st
          schema:
            type: string
          description: The thing being searched for - typically the reference

        - in: query
          name: jid
          schema:
            type: string
            format: uuid
          description: The journey identifier supplied by Vendor when the payment was set up

      responses:
        200:
          description: "Ok TBS Rocco"
          content:
            application/json:
              schema:
                type: object
                properties:
                  tax-regime:
                    # Note that this is not the final set of regimes
                    type: string
                    description: The tax regime under which the liability has arisen. One of a fixed set.
                    enum: [ SA, CT, VAT ]

                  reference:
                    type: string
                    description: The reference identifying the tax liability.

                  amount:
                    description: Represents the amount actually paid. It may be zero.
                    type: integer
                    minimum: 0
                    exclusiveMinimum: false

                  jid:
                    description: The vendor journey Id. Repeated back.
                    type: string
                    format: uuid

              example:
                {
                  "tax-regime": "SA",
                  "reference": "1097172564",
                  "amount": 1453,
                  "jid": a218f71d-9bf2-438e-851c-71d50866c2e9
                }
        401:
          description: "Bad Request TBS Rocco"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: The url to direct the customer browser to, to initiate the customer payment journey
              example:
                {
                  "error": "Mandatory ss query was ommited."
                }
        403:
          description: "Not found TBS Rocco"



